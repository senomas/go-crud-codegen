{{- define "SqlTypeRef" -}}
  {{- if eq .Type "autoincrement" }}
    {{- "INTEGER" -}}
  {{- else if or (eq .Type "text" "password" "salt" "secret") }}
    {{- "VARCHAR(255)"}}
  {{- else if or (eq .Type "int" "version") }}
    {{- "INTEGER"}}
  {{- else if eq .Type "timestamp" }}
    {{- "DATETIME"}}
  {{- else }}
    {{- .Type}}
  {{- end}}
{{- end -}}

{{- define "SqlType" -}}
  {{- if eq .Type "autoincrement" }}
    {{- "INTEGER PRIMARY KEY AUTOINCREMENT" -}}
  {{- else }}
    {{- template "SqlTypeRef" .}}
  {{- end}}
{{- end -}}

CREATE TABLE IF NOT EXISTS {{$Model := .}}{{ $idx := 0}}{{.Table}} (
  {{range .Fields -}}
    {{- $fb := .}}
    {{- if eq .Type "many-to-one" }}
      {{- $fidx := 0}}{{range .Extras.refKeys }}{{$fr := .}}
        {{- if eq $fidx 0}}
          {{- range $Model.Fields }}{{if eq .ID $fb.ID}}
            {{- if ge $idx 1}}{{ ",\n  " }}{{end}}{{$idx = add $idx 1}}
            {{- .Field}} {{ "" }}
            {{- range (model $Model .).Fields }}{{if eq .ID $fr.ref}}
              {{- template "SqlTypeRef" .}}
            {{- end}}{{end}}
          {{- end}}{{end}}
        {{- else}}
          {{- if ge $idx 1}}{{ ",\n  " }}{{end}}{{$idx = add $idx 1}}
          {{- .Field}} ({{.}})
        {{- end}}{{$fidx = add $fidx 1}}
      {{- end}}
    {{- else if eq .Type "many-to-many" }}
    {{- else }}
      {{- if ge $idx 1}}{{ ",\n  " }}{{end}}{{$idx = add $idx 1}}
      {{- .Field}} {{template "SqlType" .}}
    {{- end}}
  {{- end}}
  {{- range .Fields -}}
    {{- $fb := .}}
    {{- if eq .Type "many-to-one" }}
      {{- if ge $idx 1}}{{ ",\n  " }}{{end}}{{$idx = add $idx 1}}
      {{- "FOREIGN KEY("}}
      {{- $fidx := 0}}{{range .Extras.refKeys }}
        {{- .field}}
        {{- if gt $fidx 0}}, {{end}}{{$fidx = add $fidx 1}}
      {{- end}}) REFERENCES {{(model $Model .).Table}}(
      {{- $fidx := 0}}{{range .Extras.refKeys }}{{$fr := .}}
        {{- range $Model.Fields }}{{if eq .ID $fb.ID}}
          {{- range (model $Model .).Fields }}{{if eq .ID $fr.ref}}
            {{- .Field}}
          {{- end}}{{end}}
        {{- end}}{{end}}
      {{- end}})
    {{- end}}
  {{- end}}
);
